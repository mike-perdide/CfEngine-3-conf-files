# server.cf - server control promises
# Meant for cfengine-community >= 3.2.1

# Settings describing the details of the fixed behavioural promises made by
# cf-serverd. Server controls are mainly about determining access policy for
# the connection protocol: i.e. access to the server itself. Access to specific
# files must be granted in addition.
bundle server server_def {
    vars:
        "allowed_hosts" slist => {  "192.168.0.101", "client",
                                    "192.168.0.100", "hub",
                                 };
}

body server control {
    # List of IPs or hostnames that may have more than one connection to the
    # server port
    allowallconnects      => { @(server_def.allowed_hosts) };

    # List of IPs or hostnames that may connect to the server port
    allowconnects         => { @(server_def.allowed_hosts) };

    # List of IPs from whom we accept public keys on trust
    trustkeysfrom         => { @(server_def.allowed_hosts) };

    # List of usernames who may execute requests from this server
    allowusers            => { "root" };

    # true/false activate auditing of server connections
    #auditing => "true";

    # true/false accept connections from hosts with clocks that are out of sync
    denybadclocks => "false";

    # List of IPs or hostnames for which we expect no DNS binding and cannot verify
    skipverify            => { @(server_def.allowed_hosts) };

    # IP of the interface to which the server should bind on multi-homed hosts
    #bindtointerface => "192.168.1.1";

    # default port for cfengine server
    #port => "5308"

    # List of IPs or hostnames that may NOT connect to the server port
    #denyconnects => {};

    # List of IPs or hostnames for which the IP/name binding is expected to change
    #dynamicaddresses => { "dhcp_.*" };
}

bundle server access_rules() {
    vars:
        "common_deployed_files" slist => { @(deploy_files_def.common_deployed_files) };
    access:
        "$(def.dir_masterfiles)"
            handle => "server_access_grant_access_policy",
            comment => "Grant access to the policy updates",
            admit   => { @(server_def.allowed_hosts) };

	    "$(def.dir_common_deployed_files)$(common_deployed_files)"
            handle => "server_access_grant_deployed_files",
            comment => "Grant access to the deployed files",
            admit   => { @(server_def.allowed_hosts) };
}
