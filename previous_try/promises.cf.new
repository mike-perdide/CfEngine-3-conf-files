# promises.cf - base policy

# The common control body refers to those promises that are hard-coded into
# all the components of CFEngine, and therefore affect the behaviour of all
# the components.
body common control {
    version => "cfengine-community 3.2.1";
    any::
        domain => "test.fr";
        site_classes => { "cfhub", "cfhost1" };

        # Warn about promises that do not have comment documentation
        #require_comments => "true";

    cfhub::
        bundlesequence  => { @(g.commonbs), };
        inputs => { @(g.commonin), "server_control.cf", };

    cfhost1::
        bundlesequence  => { @(g.commonbs), };
        inputs => { @(g.commonin), "cfhost1.cf", };
}

bundle common g {
    vars:
        # The following will be set for all hosts
        "commonin"  slist => { "cfengine_stdlib.cf",
                               "agent_control.cf", "runagent_control.cf",
                               "executor_control.cf",
                               #"monitor_control.cf",
                               "agent_main.cf", };

        "commonbs"  slist => { "main", 
                               #update("cfhub")
                             };

        "allowed_hosts" slist => { "127.0.0.1", "::1", "$(sys.policy_hub)/16", },
                                 #{ "127.0.0.1",
                                 #  "cfhub", "cfhub.test.fr", "192.168.0.116",
                                 #  "cfhost1", "cfhost1.test.fr", "192.168.0.117", },
                        comment => "Define the acl",
                        handle => "common_def_vars_acl";

        "dir_masterfiles" string => translatepath("$(sys.workdir)/masterfiles"),
                        comment => "Define masterfiles path",
                        handle => "common_def_vars_dir_masterfiles";

    #classes:
        #"compound_test"
            #or => { classmatch("linux_x86_64_2_6_22.*"), "suse_10_3" };
        #"compound_class"
            #and => { classmatch("host[0-9].*"), "Monday", "Hr02" }

        # Generate a probabilistic class distribution (from strategies in cfengine 2)
        #"my_dist"
            #dist => { "10", "20", "40", "50" };
}
